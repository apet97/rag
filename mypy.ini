[mypy]
# Strict type checking for RAG system
# Enforces complete type annotations and catches type errors at development time

# === Strictness Options ===
# Pragmatic mode: check basic errors but allow incomplete type hints
# Will migrate to full strict mode incrementally as codebase is refactored
strict = False

# Require return type annotations
warn_return_any = True
warn_unused_configs = True

# === Module Options ===
# Check imported modules
ignore_missing_imports = True

# Skip type checking for specific packages if needed
; Removed outdated per-module ignore_missing_imports sections to satisfy mypy>=1.6

# === Output Options ===
# Show detailed error messages
show_error_codes = True
show_error_context = True
show_column_numbers = True
pretty = True

# === Source Code Analysis ===
# Check function bodies
check_untyped_defs = True

# Allow any implicit Optional types only for thirdparty code
implicit_optional = False

# Disallow dynamic typing
disallow_any_unimported = False
disallow_any_expr = False
disallow_any_decorated = False
disallow_any_explicit = False
disallow_any_generics = False
disallow_subclassing_any = False

# Disallow untyped definitions and calls
# Relaxed temporarily to allow incremental type annotation improvements
disallow_untyped_calls = False
disallow_untyped_defs = False
disallow_incomplete_defs = False
# Note: disallow_untyped_decorators removed - not valid in global section

# === Performance ===
# Incremental mode for faster subsequent checks
incremental = True
cache_dir = .mypy_cache

# === Python Version ===
# Target Python 3.9+ (3.8 not supported by mypy)
python_version = 3.9

# === Reporting ===
# Show all kinds of errors
show_traceback = True
warn_incomplete_stub = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
