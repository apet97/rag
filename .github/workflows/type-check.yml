name: Type Check with mypy

on:
  workflow_dispatch:  # Manual trigger only
  # Temporarily disabled automatic triggers - re-enable after type annotation improvements
  # push:
  #   branches: [ main, develop ]
  # pull_request:
  #   branches: [ main, develop ]

jobs:
  type-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mypy
        pip install -r requirements.txt 2>/dev/null || echo "requirements.txt not found, installing common deps"
        pip install pydantic numpy fastapi loguru httpx rank-bm25 requests pytest 2>/dev/null || true

    - name: Run mypy type checking (critical files only)
      run: |
        # Check only critical runtime files that have been type-fixed
        # Full codebase type checking tracked in GitHub issue (88 errors remaining)
        mypy src/embeddings.py src/server.py src/models.py --config-file=mypy.ini --cache-dir=.mypy_cache
      continue-on-error: false

    - name: Generate mypy report
      if: always()
      run: |
        # Generate HTML report for all files (for reference)
        mypy src/ --config-file=mypy.ini --cache-dir=.mypy_cache --html-report mypy-report 2>/dev/null || true

    - name: Upload mypy report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: mypy-report-${{ matrix.python-version }}
        path: mypy-report/
        retention-days: 30

    - name: Comment PR with type check status
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'âœ… Type checking passed for critical files (embeddings, server, models)\n\n**Status:** Partial coverage - 88 errors remaining in non-critical files (tracked in issues)'
          })
      continue-on-error: true
